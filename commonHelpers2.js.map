{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', evt => {\n  evt.preventDefault();\n  const currentDelayMs = document.querySelector('input[name=delay]').value;\n  const isFulfilled = document.querySelector('input[value=fulfilled]').checked;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (isFulfilled) {\n        resolve(currentDelayMs);\n      } else {\n        reject(currentDelayMs);\n      }\n    }, currentDelayMs);\n  });\n\n  // Registering promise callbacks\n  promise\n    .then(value => {\n      iziToast.success({\n        title: 'OK',\n        message: `Fulfilled promise in ${value}`,\n        position: 'topRight',\n      });\n    }) // \"Success! Value passed to resolve function\"\n    .catch(error => {\n      iziToast.error({\n        title: 'Error',\n        message: `Rejected promise in ${error}`,\n        position: 'topRight',\n      });\n    });\n});"],"names":["form","evt","currentDelayMs","isFulfilled","resolve","reject","value","iziToast","error"],"mappings":"mIAGA,MAAMA,EAAO,SAAS,cAAc,OAAO,EAE3CA,EAAK,iBAAiB,SAAUC,GAAO,CACrCA,EAAI,eAAc,EAClB,MAAMC,EAAiB,SAAS,cAAc,mBAAmB,EAAE,MAC7DC,EAAc,SAAS,cAAc,wBAAwB,EAAE,QACrD,IAAI,QAAQ,CAACC,EAASC,IAAW,CAC/C,WAAW,IAAM,CACXF,EACFC,EAAQF,CAAc,EAEtBG,EAAOH,CAAc,CAExB,EAAEA,CAAc,CACrB,CAAG,EAIE,KAAKI,GAAS,CACbC,EAAS,QAAQ,CACf,MAAO,KACP,QAAS,wBAAwBD,CAAK,GACtC,SAAU,UAClB,CAAO,CACP,CAAK,EACA,MAAME,GAAS,CACdD,EAAS,MAAM,CACb,MAAO,QACP,QAAS,uBAAuBC,CAAK,GACrC,SAAU,UAClB,CAAO,CACP,CAAK,CACL,CAAC"}